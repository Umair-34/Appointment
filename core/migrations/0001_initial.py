# Generated by Django 4.0.2 on 2022-02-10 01:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerQueries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='Name', max_length=256)),
                ('Email', models.EmailField(max_length=254)),
                ('Subject', models.CharField(default='Subject', max_length=1024)),
                ('Message', models.TextField(max_length=6000)),
            ],
            options={
                'verbose_name': 'Customer Query',
                'verbose_name_plural': 'Customer Queries',
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='Monday', max_length=10)),
            ],
            options={
                'verbose_name': 'Day',
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UploaderName', models.CharField(max_length=126)),
                ('UploaderEmail', models.EmailField(max_length=254)),
                ('UploaderPhone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('StrategyName', models.CharField(max_length=300)),
                ('CapitalRequired', models.CharField(max_length=300)),
                ('Segment', models.CharField(choices=[('Equity', 'Equity'), ('Futures', 'Futures'), ('Options', 'Options'), ('Currency', 'Currency'), ('Commodity', 'Commodity'), ('Crypto', 'Cryptos')], max_length=300)),
                ('Price', models.PositiveIntegerField()),
                ('Image', models.FileField(upload_to='Images/')),
                ('Youtube', models.CharField(blank=True, max_length=300, null=True)),
                ('Website', models.CharField(blank=True, max_length=300, null=True)),
                ('Tradingview', models.CharField(blank=True, max_length=300, null=True)),
                ('Telegram', models.CharField(blank=True, max_length=300, null=True)),
                ('Platform', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From', models.TimeField(choices=[(datetime.time(0, 0), '12:00 am'), (datetime.time(0, 30), '12:30 am'), (datetime.time(1, 0), '1:00 am'), (datetime.time(1, 30), '1:30 am'), (datetime.time(2, 0), '2:00 am'), (datetime.time(2, 30), '2:30 am'), (datetime.time(3, 0), '3:00 am'), (datetime.time(3, 30), '3:30 am'), (datetime.time(4, 0), '4:00 am'), (datetime.time(4, 30), '4:30 am'), (datetime.time(5, 0), '5:00 am'), (datetime.time(5, 30), '5:30 am'), (datetime.time(6, 0), '6:00 am'), (datetime.time(6, 30), '6:30 am'), (datetime.time(7, 0), '7:00 am'), (datetime.time(7, 30), '7:30 am'), (datetime.time(8, 0), '8:00 am'), (datetime.time(8, 30), '8:30 am'), (datetime.time(9, 0), '9:00 am'), (datetime.time(9, 30), '9:30 am'), (datetime.time(10, 0), '10:00 am'), (datetime.time(10, 30), '10:30 am'), (datetime.time(11, 0), '11:00 am'), (datetime.time(11, 30), '11:30 am'), (datetime.time(12, 0), '12:00 pm'), (datetime.time(12, 30), '12:30 pm'), (datetime.time(13, 0), '1:00 pm'), (datetime.time(13, 30), '1:30 pm'), (datetime.time(14, 0), '2:00 pm'), (datetime.time(14, 30), '2:30 pm'), (datetime.time(15, 0), '3:00 pm'), (datetime.time(15, 30), '3:30 pm'), (datetime.time(16, 0), '4:00 pm'), (datetime.time(16, 30), '4:30 pm'), (datetime.time(17, 0), '5:00 pm'), (datetime.time(17, 30), '5:30 pm'), (datetime.time(18, 0), '6:00 pm'), (datetime.time(18, 30), '6:30 pm'), (datetime.time(19, 0), '7:00 pm'), (datetime.time(19, 30), '7:30 pm'), (datetime.time(20, 0), '8:00 pm'), (datetime.time(20, 30), '8:30 pm'), (datetime.time(21, 0), '9:00 pm'), (datetime.time(21, 30), '9:30 pm'), (datetime.time(22, 0), '10:00 pm'), (datetime.time(22, 30), '10:30 pm'), (datetime.time(23, 0), '11:00 pm'), (datetime.time(23, 30), '11:30 pm')])),
                ('To', models.TimeField(choices=[(datetime.time(0, 0), '12:00 am'), (datetime.time(0, 30), '12:30 am'), (datetime.time(1, 0), '1:00 am'), (datetime.time(1, 30), '1:30 am'), (datetime.time(2, 0), '2:00 am'), (datetime.time(2, 30), '2:30 am'), (datetime.time(3, 0), '3:00 am'), (datetime.time(3, 30), '3:30 am'), (datetime.time(4, 0), '4:00 am'), (datetime.time(4, 30), '4:30 am'), (datetime.time(5, 0), '5:00 am'), (datetime.time(5, 30), '5:30 am'), (datetime.time(6, 0), '6:00 am'), (datetime.time(6, 30), '6:30 am'), (datetime.time(7, 0), '7:00 am'), (datetime.time(7, 30), '7:30 am'), (datetime.time(8, 0), '8:00 am'), (datetime.time(8, 30), '8:30 am'), (datetime.time(9, 0), '9:00 am'), (datetime.time(9, 30), '9:30 am'), (datetime.time(10, 0), '10:00 am'), (datetime.time(10, 30), '10:30 am'), (datetime.time(11, 0), '11:00 am'), (datetime.time(11, 30), '11:30 am'), (datetime.time(12, 0), '12:00 pm'), (datetime.time(12, 30), '12:30 pm'), (datetime.time(13, 0), '1:00 pm'), (datetime.time(13, 30), '1:30 pm'), (datetime.time(14, 0), '2:00 pm'), (datetime.time(14, 30), '2:30 pm'), (datetime.time(15, 0), '3:00 pm'), (datetime.time(15, 30), '3:30 pm'), (datetime.time(16, 0), '4:00 pm'), (datetime.time(16, 30), '4:30 pm'), (datetime.time(17, 0), '5:00 pm'), (datetime.time(17, 30), '5:30 pm'), (datetime.time(18, 0), '6:00 pm'), (datetime.time(18, 30), '6:30 pm'), (datetime.time(19, 0), '7:00 pm'), (datetime.time(19, 30), '7:30 pm'), (datetime.time(20, 0), '8:00 pm'), (datetime.time(20, 30), '8:30 pm'), (datetime.time(21, 0), '9:00 pm'), (datetime.time(21, 30), '9:30 pm'), (datetime.time(22, 0), '10:00 pm'), (datetime.time(22, 30), '10:30 pm'), (datetime.time(23, 0), '11:00 pm'), (datetime.time(23, 30), '11:30 pm')])),
                ('Status', models.CharField(choices=[('Available', 'Available'), ('UnAvailable', 'UnAvailable')], max_length=15)),
                ('Day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.day')),
            ],
            options={
                'verbose_name': 'Slot',
                'verbose_name_plural': 'Slots',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Link', models.CharField(blank=True, max_length=512, null=True, verbose_name='Meeting Link')),
                ('Status', models.CharField(choices=[('Requested', 'Requested'), ('Booked', 'Booked'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed')], default='Requested', max_length=20)),
                ('PaymentLink', models.CharField(blank=True, max_length=512, null=True)),
                ('AlgoTradingPlatform', models.CharField(blank=True, choices=[('Python', 'Python'), ('Tradingview', 'Tradingview'), ('MT4/MT5', 'MT4/MT5'), ('Ninjatrader', 'Ninjatrader'), ('AmiBroker', 'AmiBroker'), ('Others', 'Other? Specify in comments box')], default='Python', max_length=128, null=True)),
                ('Comment', models.TextField(default=' ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('Client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('Slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.slot')),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
            },
        ),
    ]
